{
  "name": "vidaud - Video to Audio Converter",
  "image": "mcr.microsoft.com/devcontainers/python:1-3.12-bullseye",
  
  "features": {
    "ghcr.io/devcontainers/features/docker-in-docker:2": {
      "moby": true,
      "azureDnsAutoDetection": true,
      "installDockerBuildx": true,
      "version": "latest",
      "dockerDashComposeVersion": "v2"
    },
    "ghcr.io/devcontainers/features/git:1": {
      "ppa": true,
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/github-cli:1": {
      "installDirectlyFromGitHubRelease": true,
      "version": "latest"
    }
  },

  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.flake8",
        "ms-python.black-formatter",
        "ms-python.pylint",
        "ms-python.debugpy",
        "ms-vscode.makefile-tools",
        "redhat.vscode-yaml",
        "ms-azuretools.vscode-docker",
        "ms-vscode.vscode-json",
        "eamodio.gitlens",
        "github.copilot",
        "github.copilot-chat",
        "ms-python.isort",
        "charliermarsh.ruff",
        "tamasfe.even-better-toml"
      ],
      "settings": {
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.linting.enabled": true,
        "python.linting.flake8Enabled": true,
        "python.linting.pylintEnabled": false,
        "python.formatting.provider": "black",
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false,
        "python.testing.pytestArgs": ["tests/"],
        "files.trimTrailingWhitespace": true,
        "files.insertFinalNewline": true,
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.organizeImports": "explicit"
        },
        "terminal.integrated.defaultProfile.linux": "bash"
      }
    }
  },

  "postCreateCommand": "bash .devcontainer/setup.sh",
  
  "forwardPorts": [8080],
  "portsAttributes": {
    "8080": {
      "label": "Health Check API",
      "onAutoForward": "notify"
    }
  },

  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
  ],
  
  "containerEnv": {
    "LOG_LEVEL": "DEBUG",
    "STABILITY_PERIOD_SECONDS": "5",
    "POLLING_INTERVAL_SECONDS": "5"
  }
}
